<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lesson16_8c" xml:lang="en-US">
<title>/home/thierry/Sources/Opengl/Lesson16/src/lesson16.c File Reference</title>
<indexterm><primary>/home/thierry/Sources/Opengl/Lesson16/src/lesson16.c</primary></indexterm>
<para>

<para>Ouvre une simple fenêtre Wayland on Linux et dessine un cube dont la texture des faces est issue d&apos;un fichier BMP avec OpenGL + glut. </para>
 
</para>
<programlisting>#include &lt;X11/Xlib.h&gt;
#include &lt;X11/Xatom.h&gt;
#include &lt;X11/keysym.h&gt;
#include &lt;GL/gl.h&gt;
#include &lt;GL/glx.h&gt;
#include &lt;GL/glu.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;
#include &lt;string.h&gt;
#include &quot;logger.h&quot;
</programlisting>Include dependency graph for lesson16.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_texture">Texture</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_texture">Texture</link> <link linkend="_lesson16_8c_1a9862149b4afb78441c9ac01b07535975">Texture</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_lesson16_8c_1a7b663452b29fa6d5c1004c71f0bef449">go_fullscreen</link> (Display *dsp, Window <link linkend="_lesson16_8c_1af5e9cbaf11bc8c0c330917f546d0045f">win</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_lesson16_8c_1a890ee4e485ae9ab6768f6bac7b9f679e">return_fullscreen</link> (Display *dsp, Window <link linkend="_lesson16_8c_1af5e9cbaf11bc8c0c330917f546d0045f">win</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_lesson16_8c_1a8fc17373e3f5c12f182973d00995ade3">LoadTexture</link> (char *szFilename, <link linkend="_struct_texture">Texture</link> *pTexture)</para>
</listitem>
            <listitem><para>int <link linkend="_lesson16_8c_1a8dd15539ba90ae3670aa0a9f889d2236">LoadGLTextures</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_lesson16_8c_1a63a1604ec2f287b9d5322652a51a649d">xInitWindow</link> (int *argv, char **argc)</para>
</listitem>
            <listitem><para>int <link linkend="_lesson16_8c_1aa850e410b2b24fa5c538303ae4fa6217">InitGL</link> (int Width, int Height)</para>

<para>Fonction InitGL : fonction gerant les caractéristiques de base de la scéne lorsque avec des instructions OpenGL (arrière plan, profondeur, type de profondeur, ...) </para>
</listitem>
            <listitem><para>void <link linkend="_lesson16_8c_1aaeedc5c1c90eff3a2950f1a2dbbdac6c">ReSizeGLScene</link> (int Width, int Height)</para>
</listitem>
            <listitem><para>void <link linkend="_lesson16_8c_1a3f50a3778a5799e1dd9cf4547cf73ad3">DrawGLScene</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_lesson16_8c_1a993f3ba8159c7de18fef15d66e5b74ca">keyPressed</link> (KeySym key)</para>
</listitem>
            <listitem><para>void <link linkend="_lesson16_8c_1a1a63c3962e024543d15b568028c8e37c">xMainLoop</link> ()</para>

<para>Fonction xMainLoop : correspondant à la boucle d&apos;attente d&apos;événements de X11. </para>
</listitem>
            <listitem><para>int <link linkend="_lesson16_8c_1a3c04138a5bfe5d72780bb7e82a18e627">main</link> (int argc, char **argv)</para>

<para>Programme Main obligatoire pour les programmes sous Linux (OpenGL en mode console). </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>char * <link linkend="_lesson16_8c_1ae9fb3d4767f6255c70dcd5123bbf2f54">level_debug</link></para>
</listitem>
            <listitem><para>Atom <link linkend="_lesson16_8c_1af97736f62ec5200b7103729676d95123">wmDeleteWindow</link></para>
</listitem>
            <listitem><para>Display * <link linkend="_lesson16_8c_1acf76dbe22a22b26de13c8091b9c391aa">dpDisplay</link></para>
</listitem>
            <listitem><para>Window <link linkend="_lesson16_8c_1af5e9cbaf11bc8c0c330917f546d0045f">win</link></para>
</listitem>
            <listitem><para>XWindowAttributes <link linkend="_lesson16_8c_1acd2d0100ab2abfb408f39b158feafe44">window_attr</link></para>
</listitem>
            <listitem><para>int <link linkend="_lesson16_8c_1af7a035f1a720fb7a4a279410f376800b">nFullScreen</link> =0</para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1a4055cd705bff23c15c00b8c8abb3c1d0">fXRotation</link></para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1a4499293196af3d2b92335f7ed096e9dc">fYRotation</link></para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1a468548970a0c619a40ba98bff4ae9ad2">fXSpeed</link></para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1a993f1388145b4c07b67be26668eb9e1b">fYSpeed</link></para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1acfde595878f838c910907ec90d040114">z</link> =-5.0f</para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1a933b98c8ca09e30db7b47d4d8575eaab">LightAmbient</link> [] = { 0.5f, 0.5f, 0.5f, 1.0f }</para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1a71beb2ce6c0f1281cafe8529a93bebb1">LightDiffuse</link> [] = { 1.0f, 1.0f, 1.0f, 1.0f }</para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1aabd772c6114f6182a5bd105869052b24">LightPosition</link> [] = { 0.0f, 0.0f, 2.0f, 1.0f }</para>
</listitem>
            <listitem><para>GLuint <link linkend="_lesson16_8c_1abaab572c2d38c9839d1b9831155cb3f3">filter</link></para>
</listitem>
            <listitem><para>GLuint <link linkend="_lesson16_8c_1a415698794f09bb45112acb5c2faceaed">light</link></para>
</listitem>
            <listitem><para>GLuint <link linkend="_lesson16_8c_1ae1ac4fd464137db47540c6a7b87fee77">fogMode</link> [] = { GL_EXP, GL_EXP2, GL_LINEAR }</para>
</listitem>
            <listitem><para>GLuint <link linkend="_lesson16_8c_1a87f53a2acfdf3c728b3f6924820e1cce">fogfilter</link> = 0</para>
</listitem>
            <listitem><para>GLfloat <link linkend="_lesson16_8c_1a8e753e0bde61b66d622c8c1dd6a3a261">fogColor</link> [4] = {0.5f,0.5f,0.5f,1.0f}</para>
</listitem>
            <listitem><para>GLuint <link linkend="_lesson16_8c_1acba2ad5b7750139e1d82adb26a5ed46e">iTexture</link> [3]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Ouvre une simple fenêtre Wayland on Linux et dessine un cube dont la texture des faces est issue d&apos;un fichier BMP avec OpenGL + glut. </para>

<para>Comments manageable by Doxygen</para>

<para>Modified smoothly by Thierry DECHAIZE</para>

<para>Paradigm : obtain one source (only one !) compatible for multiple free C Compilers and provide for all users an development environment on Linux (64 bits compatible), the great Code::Blocks manager (version 20.03), and don&apos;t use glaux.lib or glaux.dll.</para>

<para>a) gcc 11.3.0 (32 and 64 bits) version officielle : commande pour l&apos;installation sur Linux Mint -&gt; sudo apt-get install freeglut3 libglew-dev gcc g++ mesa-common-dev build-essential libglew2.2 libglm-dev binutils libc6 libc6-dev gcc-multilib g++-multilib; option -m32 to 32 bits ; no option to 64 bits b) CLANG version 14.0.6 (32 et 64 bits), adossé aux environnements gcc : commande pour l&apos;installation sur Linux Mint -&gt; sudo apt-get install llvm clang ; options pour la compilation et l&apos;édition de liens -&gt; &#8211;target=i686-pc-linux-gnu (32 bits) &#8211;target=x86_64-pc-linux-gnu (64 bits) c) Mingw 32 ou 64 bits version gcc version 10-win32 20220113 : commande pour l&apos;installation sur Linux Mint (NOT YET ACTIVED - Work in progress : to verify portability of these code) -&gt; sudo apt-get install mingw64 (ATTENTION, il s&apos;agit d&apos;une cross génération : l&apos;exécutable créé ne fonctionne que sur Windows</para>

<para>Date : 2023/03/30</para>

<para><formalpara><title>Author</title>

<para>Jeff Molofee ( NeHe ) originely, ported to Linux/glut by Richard Campbell, and after by Thierry Dechaize on Linux Mint </para>
</formalpara>
<formalpara><title>Version</title>

<para>2.0.1.0 </para>
</formalpara>
<formalpara><title>Date</title>

<para>30 mars 2023</para>
</formalpara>
Ce programme gére plusieurs événements : le clic sur le bouton &quot;Fermé&quot; de la fenêtre, la sortie du programme par la touche ESCAPE ou par les touches &quot;q&quot; ou &quot;Q&quot; [Quit]</para>

<para>les touches &quot;f&quot; ou &quot;F&quot; qui active ou non le &quot;Full Screen&quot; et les touches spéciales UP, DOWN, LEFT, RIGTH qui agissent</para>

<para>respectivement sur les rotations liés à chacun de ces axes. </para>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_lesson16_8c_1a9862149b4afb78441c9ac01b07535975"/>    <section>
    <title>Texture</title>
<indexterm><primary>Texture</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>Texture</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_texture">Texture</link> <link linkend="_struct_texture">Texture</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_lesson16_8c_1a3f50a3778a5799e1dd9cf4547cf73ad3"/>    <section>
    <title>DrawGLScene()</title>
<indexterm><primary>DrawGLScene</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>DrawGLScene</secondary></indexterm>
<para><computeroutput>void DrawGLScene ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a3f50a3778a5799e1dd9cf4547cf73ad3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a3f50a3778a5799e1dd9cf4547cf73ad3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a7b663452b29fa6d5c1004c71f0bef449"/>    <section>
    <title>go_fullscreen()</title>
<indexterm><primary>go_fullscreen</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>go_fullscreen</secondary></indexterm>
<para><computeroutput>void go_fullscreen (Display * dsp, Window win)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a7b663452b29fa6d5c1004c71f0bef449_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a7b663452b29fa6d5c1004c71f0bef449_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1aa850e410b2b24fa5c538303ae4fa6217"/>    <section>
    <title>InitGL()</title>
<indexterm><primary>InitGL</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>InitGL</secondary></indexterm>
<para><computeroutput>int InitGL (int Width, int Height)</computeroutput></para><para>

<para>Fonction InitGL : fonction gerant les caractéristiques de base de la scéne lorsque avec des instructions OpenGL (arrière plan, profondeur, type de profondeur, ...) </para>
</para>

<para>This function initialize the basics characteristics of the scene with instructions OpenGL (background, depth, type of depth, reset of the projection matrix, ...)</para>

<para>En retour les deux paramètres des nouvelles valeurs de largeur et de hauteur de la fenêtre redimensionnée. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>Width</entry>
                                <entry>
<para>la largeur de la fenêtre lors de l&apos;initialisation * </para>
</entry>
                            </row>
                            <row>
                                <entry>Height</entry>
                                <entry>
<para>la hauteur de la fenêtre lors de l&apos;initialisation * </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int un entier représentant le statut retour de l&apos;appel de cette fonction. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_aa850e410b2b24fa5c538303ae4fa6217_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_aa850e410b2b24fa5c538303ae4fa6217_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a993f3ba8159c7de18fef15d66e5b74ca"/>    <section>
    <title>keyPressed()</title>
<indexterm><primary>keyPressed</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>keyPressed</secondary></indexterm>
<para><computeroutput>void keyPressed (KeySym key)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a993f3ba8159c7de18fef15d66e5b74ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a993f3ba8159c7de18fef15d66e5b74ca_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a8dd15539ba90ae3670aa0a9f889d2236"/>    <section>
    <title>LoadGLTextures()</title>
<indexterm><primary>LoadGLTextures</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>LoadGLTextures</secondary></indexterm>
<para><computeroutput>int LoadGLTextures ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a8dd15539ba90ae3670aa0a9f889d2236_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a8dd15539ba90ae3670aa0a9f889d2236_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a8fc17373e3f5c12f182973d00995ade3"/>    <section>
    <title>LoadTexture()</title>
<indexterm><primary>LoadTexture</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>LoadTexture</secondary></indexterm>
<para><computeroutput>int LoadTexture (char * szFilename, <link linkend="_struct_texture">Texture</link> * pTexture)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a8fc17373e3f5c12f182973d00995ade3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a8fc17373e3f5c12f182973d00995ade3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a3c04138a5bfe5d72780bb7e82a18e627"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (int argc, char ** argv)</computeroutput></para><para>

<para>Programme Main obligatoire pour les programmes sous Linux (OpenGL en mode console). </para>
</para>

<para>Comments manageable by Doxygen</para>

<para>Programme principal de lancement de l&apos;application qui appelle ensuite toutes les fonctions utiles OpenGL et surtout glut. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>argc</entry>
                                <entry>
<para>le nombre de paramètres de la ligne de commande. </para>
</entry>
                            </row>
                            <row>
                                <entry>argv</entry>
                                <entry>
<para>un pointeur sur le tableau des différents paramètres de la ligne de commande. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int un entier permettant de connaître la statut du lancement du programme. </para>
</formalpara>
</para>

<para>This Code initialize the context of windows on Wayland.</para>

<para>Appel de la fonction xInitWindow: fonction d&apos;initialisation du contexte d&apos;une fenêtre X11 (Wayland on Linux Mint 21.1 Vera)</para>

<para>En entrée de cette fonction, les paramètres de la ligne de commande. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>argc</entry>
                                <entry>
<para>le nombre de paramètres mis à disposition sur la ligne de commande </para>
</entry>
                            </row>
                            <row>
                                <entry>argv</entry>
                                <entry>
<para>le tableau des différents paramètres mis à disposition sur la ligne de commande</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                This Code initialize les paramètres d&apos;affichage OpenGL.</para>

<para>Appel de la fonction InitGL : fonction d&apos;initialisation de la taille de la fenêtre d&apos;affichage OpenGL (la même que celle de X11)</para>

<para>En entrée de cette fonction, les deux paramètres X et Y correspondant à la taille de la fenêtre OpenGL dans l&apos;écran (deux dimensions) 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>X</entry>
                                <entry>
<para>la largeur de la fenêtre en x </para>
</entry>
                            </row>
                            <row>
                                <entry>Y</entry>
                                <entry>
<para>la hauteur de la fenêtre en y </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>void aucun retour de fonction.</para>
</formalpara>
This Code run the permanently wait loop of events.</para>

<para>Appel de la fonction xMainLoop : fonction lancant la boucle d&apos;attente des événements sous X11.</para>

<para>Aucun paramètre en entrée ni en sortie. <formalpara><title>Returns</title>

<para>void aucun retour de fonction.</para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1aaeedc5c1c90eff3a2950f1a2dbbdac6c"/>    <section>
    <title>ReSizeGLScene()</title>
<indexterm><primary>ReSizeGLScene</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>ReSizeGLScene</secondary></indexterm>
<para><computeroutput>void ReSizeGLScene (int Width, int Height)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_aaeedc5c1c90eff3a2950f1a2dbbdac6c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_aaeedc5c1c90eff3a2950f1a2dbbdac6c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a890ee4e485ae9ab6768f6bac7b9f679e"/>    <section>
    <title>return_fullscreen()</title>
<indexterm><primary>return_fullscreen</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>return_fullscreen</secondary></indexterm>
<para><computeroutput>void return_fullscreen (Display * dsp, Window win)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a890ee4e485ae9ab6768f6bac7b9f679e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a63a1604ec2f287b9d5322652a51a649d"/>    <section>
    <title>xInitWindow()</title>
<indexterm><primary>xInitWindow</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>xInitWindow</secondary></indexterm>
<para><computeroutput>void xInitWindow (int * argv, char ** argc)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a63a1604ec2f287b9d5322652a51a649d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a63a1604ec2f287b9d5322652a51a649d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_lesson16_8c_1a1a63c3962e024543d15b568028c8e37c"/>    <section>
    <title>xMainLoop()</title>
<indexterm><primary>xMainLoop</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>xMainLoop</secondary></indexterm>
<para><computeroutput>void xMainLoop ( )</computeroutput></para><para>

<para>Fonction xMainLoop : correspondant à la boucle d&apos;attente d&apos;événements de X11. </para>
</para>

<para>This function is the X11 waiting loop of events</para>

<para>Aucun paramètre en entrée et aucun retour. <formalpara><title>Returns</title>

<para>void aucun retour. </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a1a63c3962e024543d15b568028c8e37c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="lesson16_8c_a1a63c3962e024543d15b568028c8e37c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_lesson16_8c_1acf76dbe22a22b26de13c8091b9c391aa"/>    <section>
    <title>dpDisplay</title>
<indexterm><primary>dpDisplay</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>dpDisplay</secondary></indexterm>
<para><computeroutput>Display* dpDisplay</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1abaab572c2d38c9839d1b9831155cb3f3"/>    <section>
    <title>filter</title>
<indexterm><primary>filter</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>filter</secondary></indexterm>
<para><computeroutput>GLuint filter</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a8e753e0bde61b66d622c8c1dd6a3a261"/>    <section>
    <title>fogColor</title>
<indexterm><primary>fogColor</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>fogColor</secondary></indexterm>
<para><computeroutput>GLfloat fogColor[4] = {0.5f,0.5f,0.5f,1.0f}</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a87f53a2acfdf3c728b3f6924820e1cce"/>    <section>
    <title>fogfilter</title>
<indexterm><primary>fogfilter</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>fogfilter</secondary></indexterm>
<para><computeroutput>GLuint fogfilter = 0</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1ae1ac4fd464137db47540c6a7b87fee77"/>    <section>
    <title>fogMode</title>
<indexterm><primary>fogMode</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>fogMode</secondary></indexterm>
<para><computeroutput>GLuint fogMode[] = { GL_EXP, GL_EXP2, GL_LINEAR }</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a4055cd705bff23c15c00b8c8abb3c1d0"/>    <section>
    <title>fXRotation</title>
<indexterm><primary>fXRotation</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>fXRotation</secondary></indexterm>
<para><computeroutput>GLfloat fXRotation</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a468548970a0c619a40ba98bff4ae9ad2"/>    <section>
    <title>fXSpeed</title>
<indexterm><primary>fXSpeed</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>fXSpeed</secondary></indexterm>
<para><computeroutput>GLfloat fXSpeed</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a4499293196af3d2b92335f7ed096e9dc"/>    <section>
    <title>fYRotation</title>
<indexterm><primary>fYRotation</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>fYRotation</secondary></indexterm>
<para><computeroutput>GLfloat fYRotation</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a993f1388145b4c07b67be26668eb9e1b"/>    <section>
    <title>fYSpeed</title>
<indexterm><primary>fYSpeed</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>fYSpeed</secondary></indexterm>
<para><computeroutput>GLfloat fYSpeed</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1acba2ad5b7750139e1d82adb26a5ed46e"/>    <section>
    <title>iTexture</title>
<indexterm><primary>iTexture</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>iTexture</secondary></indexterm>
<para><computeroutput>GLuint iTexture[3]</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1ae9fb3d4767f6255c70dcd5123bbf2f54"/>    <section>
    <title>level_debug</title>
<indexterm><primary>level_debug</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>level_debug</secondary></indexterm>
<para><computeroutput>char* level_debug</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a415698794f09bb45112acb5c2faceaed"/>    <section>
    <title>light</title>
<indexterm><primary>light</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>light</secondary></indexterm>
<para><computeroutput>GLuint light</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a933b98c8ca09e30db7b47d4d8575eaab"/>    <section>
    <title>LightAmbient</title>
<indexterm><primary>LightAmbient</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>LightAmbient</secondary></indexterm>
<para><computeroutput>GLfloat LightAmbient[] = { 0.5f, 0.5f, 0.5f, 1.0f }</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1a71beb2ce6c0f1281cafe8529a93bebb1"/>    <section>
    <title>LightDiffuse</title>
<indexterm><primary>LightDiffuse</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>LightDiffuse</secondary></indexterm>
<para><computeroutput>GLfloat LightDiffuse[] = { 1.0f, 1.0f, 1.0f, 1.0f }</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1aabd772c6114f6182a5bd105869052b24"/>    <section>
    <title>LightPosition</title>
<indexterm><primary>LightPosition</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>LightPosition</secondary></indexterm>
<para><computeroutput>GLfloat LightPosition[] = { 0.0f, 0.0f, 2.0f, 1.0f }</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1af7a035f1a720fb7a4a279410f376800b"/>    <section>
    <title>nFullScreen</title>
<indexterm><primary>nFullScreen</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>nFullScreen</secondary></indexterm>
<para><computeroutput>int nFullScreen =0</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1af5e9cbaf11bc8c0c330917f546d0045f"/>    <section>
    <title>win</title>
<indexterm><primary>win</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>win</secondary></indexterm>
<para><computeroutput>Window win</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1acd2d0100ab2abfb408f39b158feafe44"/>    <section>
    <title>window_attr</title>
<indexterm><primary>window_attr</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>window_attr</secondary></indexterm>
<para><computeroutput>XWindowAttributes window_attr</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1af97736f62ec5200b7103729676d95123"/>    <section>
    <title>wmDeleteWindow</title>
<indexterm><primary>wmDeleteWindow</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>wmDeleteWindow</secondary></indexterm>
<para><computeroutput>Atom wmDeleteWindow</computeroutput></para>    </section><anchor xml:id="_lesson16_8c_1acfde595878f838c910907ec90d040114"/>    <section>
    <title>z</title>
<indexterm><primary>z</primary><secondary>lesson16.c</secondary></indexterm>
<indexterm><primary>lesson16.c</primary><secondary>z</secondary></indexterm>
<para><computeroutput>GLfloat z =-5.0f</computeroutput></para></section>
</section>
</section>
